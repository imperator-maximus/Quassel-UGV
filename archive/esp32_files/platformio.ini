; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env:esp32dev]
platform = espressif32
board = esp32dev
framework = arduino
upload_port = COM7
monitor_port = COM7
monitor_speed = 115200
upload_speed = 115200
; Bibliotheken
lib_deps =
    ESP32CAN=https://github.com/miwagner/ESP32-Arduino-CAN/archive/refs/heads/master.zip
; Listen-Only DroneCAN Test kompilieren
build_src_filter = +<listen_only_dronecan_test.cpp> -<auto_reset_dronecan.cpp> -<timeout_investigation.cpp> -<advanced_loopback_test.cpp> -<simple_loopback_test.cpp> -<can_hardware_diagnostic.cpp> -<main.cpp> -<can_reset_test.cpp> -<esp32can_test.cpp> -<sn65hvd230_test.cpp> -<dronecan_orange_cube_test.cpp> -<can_transceiver_test.cpp> -<twai_listen_only_test.cpp> -<twai_loopback_test.cpp> -<twai_test.cpp> -<can_diagnostic_test.cpp> -<pin_direct_test.cpp> -<blink_test.cpp> -<simple_can_test.cpp> -<improved_dronecan_test.cpp> -<serial_test.cpp> -<can_test.cpp> -<dronecan_test.cpp> -<pin_test.cpp>
; Alternativer Upload-Modus f√ºr problematische Verbindungen
upload_protocol = esptool
upload_flags =
    --before=default_reset
    --after=hard_reset
    --chip=esp32
    --baud=115200
